#pragma once
#include <Runtime/Memory/MemoryView.h>
#include <Runtime/Reflection/Reflection.h>
#include <Runtime/Resource/CustomResourceDeserializer.h>
#include "IResourceDeserializer.reflected.h"

namespace Portakal
{
	class ResourceSubObject;
	PCLASS(Virtual);

	/// <summary>
	/// Interface for resource deserializers
	/// </summary>
	class RUNTIME_API IResourceDeserializer : public Class
	{
		GENERATE_OBJECT;
	public:
		IResourceDeserializer() = default;
		~IResourceDeserializer() = default;

		virtual ResourceSubObject* Deserialize(const MemoryView& view,const String& metaData) = 0;
		virtual ResourceSubObject* DeserializeOptimized(const MemoryView& view,const String& metaData) = 0;
	};
}



























































































































































































































